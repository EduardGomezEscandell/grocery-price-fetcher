name: Quality

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  quality-go:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        check-latest: true
        cache: false
    - name: Install Make
      run: |
        export DEBIAN_NONINTERACTIVE=1
        sudo apt update
        sudo apt install -y make
    - name: Tidy up
      run: |
        make tidy
        if [ -n "$(git status --porcelain)" ]; then
          echo "Error: go.mod and/or go.sum are out of sync. Please run 'go mod tidy' and commit the changes." &>2
          exit 1
        fi
    - name: Build Go
      run: make build-go
    - name: Lint Go
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest

  quality-js:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Install Make
      run: |
        export DEBIAN_NONINTERACTIVE=1
        sudo apt update
        sudo apt install -y make
    - name: Set up node
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Build front-end
      run: make build-js
  
  deployment-sanity:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Install Make
      run: |
        export DEBIAN_NONINTERACTIVE=1
        sudo apt update
        sudo apt install -y make npm curl
    - name: Set up node
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        check-latest: true
        cache: false
    - name: Sanity check
      run: make full-start
    - name: Wait for the application to start
      run: sleep 10
    - name: Test endpoint
      run: curl http://localhost:80
    - name: Stop the application
      run: make clean
    - name: Run end-to-end tests
      run: make test